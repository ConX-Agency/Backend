// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Users {
  user_id        Int    @id @default(autoincrement())
  full_name      String
  preferred_name String
  contact_number String
  email_address  String @unique
  username       String @unique
  password       String
  type           String
}

model Clients {
  client_id                 Int                @id @default(autoincrement())
  company_name              String             @unique
  person_in_charge_name     String
  company_email             String             @unique
  contact_number            String
  additional_contact_number String
  industry                  String
  category                  String
  campaigns                 Campaign[]
  clients_location          Clients_Location[]
}

model Clients_Location {
  client_location_id Int     @id @default(autoincrement())
  client_id          Int
  client             Clients @relation(fields: [client_id], references: [client_id])
  country            String
  city               String
  state              String
  postcode           String
  address            String
}

model Influencer {
  influencer_id             Int                    @id @default(autoincrement())
  full_name                 String
  preferred_name            String
  contact_number            String
  email_address             String                 @unique
  additional_contact_number String
  country                   String
  city                      String
  state                     String
  postcode                  String
  multiple_countries        Boolean?
  additional_country        String?
  industry                  String
  consent_whatsapp_group    Boolean                @default(false)
  whatsapp_invited          Boolean                @default(false)
  community                 Boolean                @default(false)
  invite_count              Int                    @default(0)
  accounts_id               Int[]
  influencer_campaign       Influencers_Campaign[]
}

model Accounts {
  account_id       Int      @id @default(autoincrement())
  social_media_url String
  followers        String
  account_type     String
  platform         Platform @relation(fields: [platform_id], references: [platform_id])
  platform_id      Int
}

model Platform {
  platform_id   Int        @id @default(autoincrement())
  platform_name String
  accounts      Accounts[]
}

model Campaign {
  campaign_id          Int                    @id @default(autoincrement())
  client_id            Int
  campaign_name        String
  start_date           DateTime
  end_date             DateTime
  status               String
  max_influencers      Int
  min_influencers      Int
  kpi_status           String
  client               Clients                @relation(fields: [client_id], references: [client_id])
  offers_card          Offers_Card[]
  influencers_campaign Influencers_Campaign[]
}

model Influencers_Campaign {
  influencer_campaign_id   Int        @id @default(autoincrement())
  campaign_id              Int
  influencer_id            Int
  completed_instapost      Int
  completed_tiktokpost     Int
  completed_googlereview   Int
  completed_redpost        Int
  status                   String
  message_sent_date        DateTime
  influencer_response_date DateTime
  influencer               Influencer @relation(fields: [influencer_id], references: [influencer_id])
  campaign                 Campaign   @relation(fields: [campaign_id], references: [campaign_id])
}

model Offers_Card {
  offer_card_id            Int      @id @default(autoincrement())
  campaign_id              Int
  clients_location_id      Int
  offer_type               String
  offer_description        String
  services_required        String
  key_message              String
  food_products_to_feature String
  max_booking_pax          Int
  campaign                 Campaign @relation(fields: [campaign_id], references: [campaign_id])
}
